<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="SC_EmrForm" classname="SC_EmrForm" left="0" top="0" width="1024" height="768" titletext="New Form">
    <Layouts>
      <Layout>
        <Static id="Static00" taborder="0" text="EMR" left="2.34%" top="14" right="84.77%" height="46" style="color:#6c6c6cff;align:middle;font:antialias 20 맑은 고딕;"/>
        <Tab id="medTab" taborder="1" left="3.22%" top="68" right="34.47%" height="612" tabindex="0" scrollbars="autoboth" style="buttongradation:liner 0,0 #feffffff 0,100 #e1e1dfff [60% #f2f2efff][70% #ecece9ff];background:white;bordertype:round 5 5 ;font:13 Dotum;">
          <Tabpages>
            <Tabpage id="reportTp" text="진단">
              <Layouts>
                <Layout width="430" height="208">
                  <Grid id="Grid00" taborder="49" binddataset="dsBaseExam" scrollbars="none" useinputpanel="false" autofittype="col" fillareatype="allrow" hideendline="col" useselcolor="false" mergeview="fullview" left="-304" top="19" width="266" height="147" style="border:1px solid azure ;font:9 Dotum;">
                    <Formats>
                      <Format id="default">
                        <Columns>
                          <Column size="101"/>
                          <Column size="124"/>
                          <Column size="42"/>
                        </Columns>
                        <Rows>
                          <Row size="25" band="head"/>
                          <Row size="24"/>
                          <Row size="24"/>
                          <Row size="24"/>
                          <Row size="24"/>
                          <Row size="24"/>
                        </Rows>
                        <Band id="head">
                          <Cell style="color: ;" text="항목"/>
                          <Cell col="1" style="color: ;" text="측정치"/>
                          <Cell col="2" text="단위"/>
                        </Band>
                        <Band id="body">
                          <Cell style="background: ;font:bold 9 휴먼고딕;" text="혈압(수축기)"/>
                          <Cell col="1" edittype="normal" style="background: ;" text="bind:systolicPressure"/>
                          <Cell col="2" style="background: ;font:bold 9 arial;" text="mmHg"/>
                          <Cell row="1" style="background: ;font:bold 9 휴먼고딕;" text="혈압(이완기)"/>
                          <Cell row="1" col="1" edittype="normal" style="background: ;" text="bind:diastolicPressure"/>
                          <Cell row="1" col="2" style="background: ;font:bold 9 arial;" text="mmHg"/>
                          <Cell row="2" style="background: ;font:bold 9 휴먼고딕;" text="맥박"/>
                          <Cell row="2" col="1" edittype="normal" style="background: ;" text="bind:pulse"/>
                          <Cell row="2" col="2" style="background: ;font:bold 9 arial;" text="/min"/>
                          <Cell row="3" style="background: ;font:bold 9 휴먼고딕;" text="호흡수"/>
                          <Cell row="3" col="1" edittype="normal" style="background: ;" text="bind:respirationRate"/>
                          <Cell row="3" col="2" style="background: ;font:bold 9 arial;" text="/min"/>
                          <Cell row="4" style="background: ;font:bold 9 휴먼고딕;" text="체온"/>
                          <Cell row="4" col="1" edittype="normal" style="background: ;" text="bind:bodyTemp"/>
                          <Cell row="4" col="2" style="background: ;font:bold 9 arial;" text="℃"/>
                        </Band>
                      </Format>
                    </Formats>
                  </Grid>
                  <Div id="Div05" taborder="58" left="59.23%" top="34" right="0.96%" height="146"/>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="prscTp" text="처방">
              <Layouts>
                <Layout/>
              </Layouts>
            </Tabpage>
            <Tabpage id="chartTp" text="차트">
              <Layouts>
                <Layout>
                  <Div id="chartDiv" taborder="11" left="0.32%" top="2" right="0.48%" height="30" style="border:1 solid black ;bordertype:round 5 5 ;" cssclass="TStc">
                    <Layouts>
                      <Layout/>
                    </Layouts>
                  </Div>
                </Layout>
              </Layouts>
            </Tabpage>
          </Tabpages>
        </Tab>
        <Div id="chartDiv" taborder="2" left="3.32%" top="96" right="34.57%" height="30" style="border:1 solid black ;bordertype:round 5 5 ;" cssclass="TStc"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.0"><![CDATA[/********************************************************************************                                                                            
@Path			진료처방 공통(Medication Base)              				   				
@Description	EMR 관리 화면				
@Author	  		임행섭				    			                        								                                            
@Create         2016. 6. 13.                             		                    				                                            
********************************************************************************/

include "scripts::commonScripts.xjs";  
include "scripts::hrsScripts.xjs";

var patNo = "";
var dept;
var empNo;
var smCd;
var prescDt; 			// 상병내역등록이랑 처방내역 등록때 시퀀스만들때 사용한다 날짜시분초
var searchDate = null;
var diCode;
var diCodeNm;
var receiptNo;          // 외래접수번호
var prescNo;
var sDate = null     			// 오늘날짜      
                                                                                                                                                
                                                                                                                                                    
// 화면 로딩시
this.MB_EmrForm_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{

	empNo = application.gdsEmp.getColumn(0, "empNo");
	this.trmtDiv.trmtDoctEd.set_value(application.gdsEmp.getColumn(0, "empNm"));
	this.trmtDiv.trmtDeptEd.set_value(application.gdsEmp.getColumn(0, "deptNm"));

	//searchDate = this.gfnLocalDate();
	//searchDate = "20160401";
	//sDate = searchDate;
	//this.trmtDiv.trmtDateCal.set_value(searchDate.replace(/-/g, ""));
}


// 조회버튼 클릭시 
this.searchBtn_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{

	searchDate = null;
// 	this.dsService.setColumn(1,"argument","trmtDoct=43000 trmtDate="+searchDate+" gubun=N");//n은 입원유무 43000은 현재 차트에 들어온 의사번호를 뜻한다 나중에 로그인의사번호 받아서  넣으면된다
	this.dsService.setColumn(1, "argument", "trmtDoct=" + empNo + " trmtDate=" + searchDate);
	//var trmtDoct = application.gdsEmp.getColumn(0, "empNo"); //alert(trmtDoct); /*"43000"*/
 	//this.dsService.setColumn(1, "argument", "trmtDoct=" + trmtDoct + " trmtDate=" + searchDate);  //담당의 번호가 들어간다
  	this.gfnService("findReceiptList");
}

// 환자그리드 클릭시
this.patGrid_oncellclick = function(obj:Grid, e:nexacro.GridClickEventInfo)
{
	prescDt = this.gfnFormatDate("YmdHis");
	patNo = this.dsOutpaReceipt.getColumn(this.dsOutpaReceipt.rowposition, "patNo");
	receiptNo=this.dsOutpaReceipt.getColumn(this.dsOutpaReceipt.rowposition, "outpaReceiptNo");
	
	//기초검사정보조회
	this.dsService.setColumn(4, "argument","patNo="+patNo);
	this.gfnService("findBaseExamList");             
	//상병내역조회
    this.dsService.setColumn(2,"argument","patNo="+patNo);
    this.gfnService("findPatientDsPrscList"); 
    
	this.medTab.chartTp.chartDiv.patNoEd.set_value(patNo); //pdf파일칸에 미리 선택한 환자번호 넣어두기
}

// 입원/외래 라디오버튼 클릭시 
this.inoutRadio_onitemchanged = function(obj:Radio, e:nexacro.ItemChangeEventInfo)
{
	var radio = this.inoutRadio.value;
	if (radio == "") {
	    this.dsOutpaReceipt.filter("");    
    } else {
        this.dsOutpaReceipt.filter("prescYb=='" + radio + "'");
    }
}

/****** 진단탭 *****/

// 진단탭 상병내역 그리드 클릭시   
this.medTab_reportTp_diseaseGrid_oncellclick = function(obj:Grid, e:nexacro.GridClickEventInfo)
{
	// 해당 상병에 대한 처방 필터링
	var diseaseCode = this.dsPatientDs.getColumn(this.dsPatientDs.rowposition, "code");   
	var prescDate   = this.dsPatientDs.getColumn(this.dsPatientDs.rowposition, "prescDate");  
	var patNo       = this.dsPatientDs.getColumn(this.dsPatientDs.rowposition, "patNo"); 

	this.dsPatientPrsc.filter("patNo=='"+patNo+"' && prescDate=='"+prescDate+"' && diseaseCd =='"+diseaseCode+"'");
}

/***** 여기까지 진단 탭 *****/


/***** 처방 탭 *****/


// 처방탭 상병내역 그리드 클릭시
this.medTab_prscTp_diseaseGrid_oncellclick = function(obj:Grid, e:nexacro.GridClickEventInfo)
{
	if (e.cell == 0) { 
		var diseaseType = application.open("상병코드검색",
										   "med::MB_DiseasePopupForm.xfdl", 
										   this.parent,
										   {},
										   "showtitlebar=true showstatusbar=false",
										   700, 100, 250, 300
										  );	
 
		this.setDsCode = function(arrRtn) { 
			// 같은 상병코드가 같은 날에 있을때 등록불가 설정
			for (var i = 0; i < this.dsPatientDs.getRowCount(); i++) {   
				var check = this.dsPatientDs.getColumn(i, "code");  
				var sDateCheck = this.dsPatientDs.getColumn(i, "prescDate");
				if (arrRtn[0] == check && sDate == sDateCheck) {
					alert("기준일에 동일한 상병이 이미 등록되어있습니다");
					return;
				}
			}
			this.dsPatientDs.setColumn(this.dsPatientDs.rowposition, "code", arrRtn[0]);
			this.dsPatientDs.setColumn(this.dsPatientDs.rowposition, "codeNm", arrRtn[1]);
			
			diCode   = this.dsPatientDs.getColumn(this.dsPatientDs.rowposition, "code");   	  // 상병코드
			diCodeNm = this.dsPatientDs.getColumn(this.dsPatientDs.rowposition, "codeNm");	  // 상병명
			patNo    = this.dsPatientDs.getColumn(this.dsPatientDs.rowposition, "patNo"); 	  // 환자번호
			dept 	 = this.dsPatientDs.getColumn(this.dsPatientDs.rowposition, "dept");	  // 진료과
			prescNo  = this.dsPatientDs.getColumn(this.dsPatientDs.rowposition, "prescNo");	  // 처방번호
			var pDate  = this.dsPatientDs.getColumn(this.dsPatientDs.rowposition, "prescDate"); // 처방일
			// 해당 상병에 대한 처방 필터링
			this.dsPatientPrsc.filter("patNo=='"+patNo+"' && prescDate=='"+pDate+"' && diseaseCd =='"+diCode+"'");
		} 
	}	
}

// 처방탭 상병내역등록 버튼 클릭시
this.medTab_prscTp_diseaseDiv_diseaseAddBtn_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	//여기에서 날짜시분초로 상병 내역등록시 시퀀스만들고 처방내역은 이 시퀀스뒤에 처방내역 만들때 줄번호를 붙여 시퀀스를 만든다
	prescDt = this.gfnFormatDate("YmdHis");

	if (this.gfnIsNull(patNo)) {
		alert("환자를 선택해주세요");
		return;
	} else {
		this.dsPatientDs.addRow();        // 상병내역 추가 
	   	this.dsPatientDs.setColumn(this.dsPatientDs.rowposition, "patNo", patNo);
		this.dsPatientDs.setColumn(this.dsPatientDs.rowposition, "dept", this.trmtDeptEd.value);
		this.dsPatientDs.setColumn(this.dsPatientDs.rowposition, "prescDate", prescDt);   
		this.dsPatientDs.setColumn(this.dsPatientDs.rowposition, "prescNo", prescNo);
	}
}

// 처방탭 상병내역삭제 버튼 클릭시
this.medTab_prscTp_diseaseDiv_diseaseDelBtn_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.dsPatientDs.deleteRow(this.dsPatientDs.rowposition);
}

// 처방탭 처방내역삭제 버튼 클릭시
this.medTab_prscTp_prscDiv_prscDelBtn_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.dsPatientPrsc.deleteRow(this.dsPatientPrsc.rowposition);
}
 
// 처방버튼 클릭시
this.medTab_prscTp_prscTypeDiv_prscBtn_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	// [투약] [검사] [수혈] [처치] [재료] [재활]
	switch (obj.text) {
		case "투약" :
			smCd = 1;
			this.medTab.prscTp.presGrid.setCellProperty("head", "0", "text", "투약항목");
			this.dsService.setColumn(0, "argument", "smCd=1");
			this.gfnService("findFeeCdList");
			break;
		case "검사" :
			smCd = 2;
			this.medTab.prscTp.presGrid.setCellProperty("head", "0", "text", "검사항목");
			this.dsService.setColumn(0, "argument", "smCd=2");
			this.gfnService("findFeeCdList");
			break;
		case "수혈" :
			smCd = 3;
			this.medTab.prscTp.presGrid.setCellProperty("head", "0", "text", "수혈항목");
			this.dsService.setColumn(0, "argument", "smCd=3");
			this.gfnService("findFeeCdList");
			break;
		case "처치" :
			smCd = 4;
			this.medTab.prscTp.presGrid.setCellProperty("head", "0", "text", "처치항목");
			this.dsService.setColumn(0, "argument", "smCd=4");
			this.gfnService("findFeeCdList");
			break;
		case "재료" :
			smCd = 5;
			this.medTab.prscTp.presGrid.setCellProperty("head", "0", "text", "재료항목");
			this.dsService.setColumn(0, "argument", "smCd=5");
			this.gfnService("findFeeCdList");
			break;
		case "재활" :
			smCd = 6;
			this.medTab.prscTp.presGrid.setCellProperty("head", "0", "text", "재활항목");
			this.dsService.setColumn(0, "argument", "smCd=6");
			this.gfnService("findFeeCdList");
			break;
	}
}

// 처방탭 처방그리드 더블클릭시
this.medTab_prscTp_presGrid_oncelldblclick = function(obj:Grid, e:GridClickEventInfo)
{	
    dept = this.trmtDiv.trmtDeptEd.value;
	this.dsPatientPrsc.addRow();
	
 	if (this.gfnIsNull(prescDt)) {
		// 처방전 시퀀스 생성(처방일-5자리순번)
 		prescSeqNo = (this.dsPatientPrsc.getRowCount()).toString().padLeft(5, "0");
		prescNo = prescDt + "-" + prescSeqNo;
		alert(prescNo);
 	} else {
		prescNo = this.dsPatientDs.getColumn(this.dsPatientDs.rowposition, "prescNo");
 		prescSeqNo = (this.dsPatientPrsc.getRowCount()).toString().padLeft(5,"0");
		prescNo = prescDt + "-" + prescSeqNo; 
		alert(prescNo);  
	}
	
    this.dsPatientPrsc.setColumn(this.dsPatientPrsc.rowposition, "doctNm", this.trmtDiv.trmtDoctEd.value);  // 진료의명
    this.dsPatientPrsc.setColumn(this.dsPatientPrsc.rowposition, "patNo", patNo);                       	// 환자번호
	this.dsPatientPrsc.setColumn(this.dsPatientPrsc.rowposition, "prescNo", prescNo);                   	// 처방번호
	this.dsPatientPrsc.setColumn(this.dsPatientPrsc.rowposition, "prescDate", sDate);                   	// 처방일(오늘날짜)
	this.dsPatientPrsc.setColumn(this.dsPatientPrsc.rowposition, "prescGubun", smCd);                   	// 코드
	this.dsPatientPrsc.setColumn(this.dsPatientPrsc.rowposition, "diseaseCd", diCode);                  	// 상병코드
	this.dsPatientPrsc.setColumn(this.dsPatientPrsc.rowposition, "diseaseNm", diCodeNm);                	// 상병명
	this.dsPatientPrsc.setColumn(this.dsPatientPrsc.rowposition, "dept", this.trmtDiv.trmtDeptEd.value);   	// 진료과
	this.dsPatientPrsc.setColumn(this.dsPatientPrsc.rowposition, "outpaReceiptNo", receiptNo);          	// 접수번호

	var arrRtn = new Array();
	for (var i = 0; i < this.dsFeeCd.getColCount(); i++) {		
		var colName = this.dsFeeCd.getColID(i);   
		var colVal = this.dsFeeCd.getColumn(this.dsFeeCd.rowposition, colName);
		arrRtn[i] = "\n" + i + " " + colName + " " + colVal;
		this.dsPatientPrsc.setColumn(this.dsPatientPrsc.rowposition, colName, colVal);
	}  
	trace(this.dsPatientPrsc.saveXML());
	this.dsPatientPrsc.setColumn(this.medTab.prscTp.patientGrid.currentrow, "uniqueNtc", this.dsBaseExam.getColumn(0, "sopMemo"));
}


/***** 차트탭 *****/

// 차트탭 조회 클릭시
this.medTab_chartTp_chartDiv_reportBtn_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(this.gfnIsNull(this.medTab.chartTp.chartDiv.patNoEd.value)) { 
		alert("환자번호를 선택해주세요");
		return;
	}
	this.medTab.chartTp.emrBrowser.set_url("http://localhost:8282/his/med/base/reportEmr.do?format=pdf&patNo=" + this.medTab.chartTp.chartDiv.patNoEd.value);
	this.medTab.chartTp.emrBrowser.reload();
	//this.medTab.chartTp.emrBrowser.set_url("http://localhost/erp45/med/mc/findEmrReport.do?patCode="+this.medTab.tabpage4.Div00.emrReport.value);//값에 담긴 환자번호 보낸다
	//this.medTab.chartTp.emrBrowser.url = "http://localhost/ERP44/med/mc/findEmrReport.do?format=pdf";
	//gfnService("reportEmr");
}
  
/***** 여기까지 차트탭 *****/  
  
  
/***** 화면 하단구역 *****/

// 닫기버튼 클릭시
this.closeBtn_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.close();
}

// 등록버튼 클릭시
this.registerBtn_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{ 
  	var hosYn = this.patientDiv.hosCombo.value;
	var diseaseNm = this.dsPatientDs.getColumn(0, "codeNm");
	var trmtDept = this.trmtDiv.trmtDeptEd.value;
	for (var i = 0; i < this.dsPatientDs.getRowCount(); i++) {
	   this.dsPatientDs.setColumn(i, "gubun", hosYn);  
	}
	
	if (this.dsPatientDs.getRowCount != 0) {
		this.dsOutpaReceipt.setColumn(this.dsOutpaReceipt.rowposition, "trmtYb", "Y");   
		this.dsOutpaReceipt.setColumn(this.dsOutpaReceipt.rowposition, "prescYb", "Y");
		this.dsOutpaReceipt.setColumn(this.dsOutpaReceipt.rowposition, "dgnsNm", diseaseNm);
		//this.dsPatientDs.setColumn(this.dsPatientDs.rowposition, "prescNo", prescNo);
	} 
	
  	if (confirm("EMR 등록 하시겠습니까?")) {
		this.gfnService("batchEmr");			
	} 
} 
 	
// EMR 트랜잭션 콜백함수
this.emrCallback = function(serviceID, errorCode, errorMsg)
{
	if (errorCode < 0) {
		this.gfnErrorPopup(serviceID, errorCode, errorMsg);
	} else {
		if (serviceID == "findReceiptList") {
			patNo = this.dsOutpaReceipt.getColumn(this.dsOutpaReceipt.rowposition, "patNo");
		    this.patGrid.patGrid_oncellclick;
		} else if (serviceID == "findBaseExamList") {
			if (this.dsBaseExam.getRowCount()==0) this.dsBaseExam.addRow();
			this.dsBaseExam.setColumn(this.dsBaseExam.rowposition, "patNo", patNo);
		} else if (serviceID == "batchEmrList") {
			alert("EMR이 정상적으로 등록되었습니다.");
		}
	}
}


// ❖S: patient’s symptoms and complaints
// ❖O: patient's height, weight, temperature, pulse, blood pressure, visual acuity, etc.
// ❖A: new lab data and results of studies, reports, assessments
// ❖P: the current formulation and plan for the patient
]]></Script>
  </Form>
</FDL>
